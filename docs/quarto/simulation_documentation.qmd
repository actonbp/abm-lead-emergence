---
title: "Leadership Emergence Simulation Documentation"
author: "ABM Leadership Emergence Team"
date: last-modified
format:
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
    documentclass: article
    papersize: letter
    geometry:
      - margin=1in
    bibliography: references.bib
  html:
    toc: true
    toc-depth: 3
    theme: cosmo
    code-fold: true
    number-sections: true
    embed-resources: true
---

# Introduction

This document provides comprehensive documentation for the Leadership Emergence Agent-Based Model (ABM) simulation. It covers the theoretical foundations, metrics, parameters, and practical usage guidelines.

# Quick Start Guide

## Basic Parameters {.unnumbered}

The simulation can be run with minimal configuration using these essential parameters:

- **Number of Agents**: 2-10 agents (default: 4)
- **Identity Change Rate**: 0.1-5.0 (default: 2.0)
- **Initial Leader Identity**: 0-100 (default: 50)

## Running Your First Simulation {.unnumbered}

1. Select model variant
2. Configure basic parameters
3. Click "Start Simulation"
4. Use "Step Forward" to progress

# Theoretical Framework

## Social Identity Theory

The simulation draws heavily on Social Identity Theory [@hogg2001social] to model how group memberships and collective identity influence leadership emergence. Key aspects include:

- Identity formation through group interaction
- Prototype-based leadership
- Social categorization processes

## Implicit Leadership Theory

Based on work by @lord1984cognitive, the simulation implements Implicit Leadership Theory through:

- Individual leadership prototypes
- Matching processes between characteristics and prototypes
- Dynamic updating of leadership schemas

# Simulation Metrics

## Hierarchy Clarity

Measures how clear and well-defined the leadership hierarchy is within the group.

- **Range**: 0-1
- **Interpretation**: Higher values indicate clearer leadership structure
- **Threshold**: > 0.5 indicates meaningful hierarchy emergence

```{python}
#| echo: false
#| fig-cap: "Example of hierarchy clarity development over time"
import matplotlib.pyplot as plt
import numpy as np

steps = np.linspace(0, 100, 50)
clarity = 1 - np.exp(-steps/30)
plt.plot(steps, clarity)
plt.xlabel('Simulation Steps')
plt.ylabel('Hierarchy Clarity')
plt.grid(True, alpha=0.3)
```

## Rank Consensus

Indicates agreement among agents about leadership rankings.

- **Range**: 0-1
- **Interpretation**: Higher values show stronger agreement
- **Threshold**: > 0.6 indicates reliable consensus

# Advanced Parameters

## ILT Matching Methods

### Euclidean Distance

$d = \sqrt{\sum(x_i - y_i)^2}$

Simple direct comparison of characteristics. Best for:

- Clear, quantifiable leadership traits
- Direct comparison scenarios
- Initial testing and validation

### Gaussian Similarity

$s = e^{-\frac{d^2}{2\sigma^2}}$

More forgiving of small differences. Suitable for:

- Natural leadership emergence
- Gradual development scenarios
- Complex trait interactions

### Sigmoid Function

$s = \frac{1}{1 + e^{-k(x-x_0)}}$

Sharp transition between acceptance/rejection. Useful for:

- Binary decision modeling
- Threshold-based systems
- Critical point analysis

## Identity Change Parameters

### Multipliers

Identity change multipliers affect how quickly agents adapt their self-view:

- **Claim Success**: 0.1-2.0 (how much successful claims boost leader identity)
- **Grant Impact**: 0.1-2.0 (how much granting leadership affects follower identity)

# Validation Metrics

## Structural Stability

Measures the consistency of interaction patterns:

- **High**: > 0.7 (stable hierarchy)
- **Medium**: 0.4-0.7 (developing structure)
- **Low**: < 0.4 (chaotic/unstable)

## System Entropy

Quantifies the overall organization of the leadership structure:

- **Low**: < 2.0 (well-organized)
- **Medium**: 2.0-3.0 (developing)
- **High**: > 3.0 (disordered)

# References 